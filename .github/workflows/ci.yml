name: CI

on: [push, pull_request]

jobs:
  rspec:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby: ['2.7', '2.6', '2.5', '2.4']
        frozen_string_literal: ['yes', 'no']
        exclude:
          - ruby: '2.5'
            frozen_string_literal: 'yes'
          - ruby: '2.4'
            frozen_string_literal: 'yes'

    env:
      RGGEN_ROOT: ${{ github.workspace }}
      RUBYOPT: ${{ (matrix.frozen_string_literal == 'yes' && '--enable-frozen-string-literal') || '' }}
      USE_FIXED_GEMS: ${{ matrix.frozen_string_literal }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Checkout RgGen library list
        uses: actions/checkout@v2
        with:
          repository: rggen/rggen-checkout
          path: rggen-checkout

      - name: Checkout RgGen libraries
        run: |
          ${RGGEN_ROOT}/rggen-checkout/bin/checkout

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ matrix.ruby }}-frozen_string_literal-${{ matrix.frozen_string_literal }}-${{ github.sha }}
          restore-keys: |
            gems-${{ runner.os }}-${{ matrix.ruby }}-frozen_string_literal-${{ matrix.frozen_string_literal }}-

      - name: Install gems
        run: |
          gem install -N bundler
          bundle config path vendor/bundle
          bundle install

      - name: Run RSpec
        run: |
          bundle exec rake coverage

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          name: ${{ runner.os }}-${{ matrix.ruby }}-frozen_string_literal-${{ matrix.frozen_string_literal }}
          file: ./coverage/coverage.xml
          fail_ci_if_error: true
